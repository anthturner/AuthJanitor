@if (ShowEditControls)
{
    <NumericEdit @bind-Value="@Value" Placeholder="Period of validity..." />
    <small>@ToReadableString(TimeSpan.FromMinutes(Value))</small>
}
else
{
    <Paragraph Alignment="TextAlignment.Center">
        @Value
        <small>@ToReadableString(TimeSpan.FromMinutes(Value))</small>
    </Paragraph>
}

@using Blazorise
@code
{
    [Parameter]
    public bool ShowEditControls { get; set; }

    [Parameter]
    public EventCallback<bool> ShowEditControlsChanged { get; set; }

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    public string ToReadableString(TimeSpan span)
    {
        string formatted = string.Format("{0}{1}{2}{3}{4}",
            span.Duration().Days > 30 ? string.Format("~{0:0} month{1}, ", span.Days / 30, (span.Days / 30) == 1 ? string.Empty : "s") : string.Empty,
            span.Duration().Days > 0 ? string.Format("{0:0} day{1}, ", span.Days, span.Days == 1 ? string.Empty : "s") : string.Empty,
            span.Duration().Hours > 0 ? string.Format("{0:0} hour{1}, ", span.Hours, span.Hours == 1 ? string.Empty : "s") : string.Empty,
            span.Duration().Minutes > 0 ? string.Format("{0:0} minute{1}, ", span.Minutes, span.Minutes == 1 ? string.Empty : "s") : string.Empty,
            span.Duration().Seconds > 0 ? string.Format("{0:0} second{1}", span.Seconds, span.Seconds == 1 ? string.Empty : "s") : string.Empty);

        if (formatted.EndsWith(", ")) formatted = formatted.Substring(0, formatted.Length - 2);

        if (string.IsNullOrEmpty(formatted)) formatted = "Enter a duration in minutes.";

        return formatted;
    }
}
