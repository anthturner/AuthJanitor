<Blazorise.Container>
    @foreach (var item in Resources.OrderBy(r => r.Name))
    {
        <Blazorise.Row>
            <Blazorise.Column ColumnSize="ColumnSize.IsAuto">
                <span class="fa-layers fa-2x fa-fw">
                    <i class="@item.ProviderDetail.IconClass"></i>
                </span>
            </Blazorise.Column>
            <Blazorise.Column>
                <CheckEdit CheckedChanged="@(v => UpdateObject(item.ObjectId, v))"><strong>@item.Name</strong></CheckEdit>
                <small>@item.Description</small>
            </Blazorise.Column>
        </Blazorise.Row>
    }
</Blazorise.Container>

<Blazorise.Container>
        <Row>
            <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
                <FieldLabel ColumnSize="ColumnSize.Is4">Name</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is8"><TextEdit @bind-Text="@Value.Name" Placeholder="Secret name..." /></FieldBody>
            </Field>
        </Row>
        <Row>
            <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
                <FieldLabel ColumnSize="ColumnSize.Is4">Description</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is8"><TextEdit @bind-Text="@Value.Description" Placeholder="Secret description..." /></FieldBody>
            </Field>
        </Row>
        <Row>
            <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
                <FieldLabel ColumnSize="ColumnSize.Is4">Valid Period</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is8">
                    <TimespanComponent @bind-Value="@Value.ValidPeriodMinutes" ShowEditControls="true" />
                </FieldBody>
            </Field>
        </Row>
        <Row>
            <Field IsHorizontal="true" ColumnSize="ColumnSize.Is12">
                <FieldLabel ColumnSize="ColumnSize.Is4">Confirmation Strategies</FieldLabel>
                <FieldBody ColumnSize="ColumnSize.Is8">
                    <ConfirmationStrategiesComponent @bind-Value="@Value.TaskConfirmationStrategies" ShowEditControls="true" />
                </FieldBody>
            </Field>
        </Row>
</Blazorise.Container>

@using Blazorise
@using AuthJanitor.Automation.Shared.ViewModels 
@code {
    [Parameter]
    public ManagedSecretViewModel Value { get; set; }

    [Parameter]
    public EventCallback<ManagedSecretViewModel> ValueChanged { get; set; }

    protected IEnumerable<ResourceViewModel> Resources { get; set; } = new List<ResourceViewModel>();

    protected override async Task OnInitializedAsync()
    {
        Resources = await Http.AJList<ResourceViewModel>();
    }

    protected void UpdateObject(Guid objectId, bool isChecked)
    {
        var resourceIds = Value.ResourceIds.Split(';').ToList();
        if (isChecked)
            resourceIds.Add(objectId.ToString());
        else
            resourceIds.RemoveAll(r => Guid.Parse(r) == objectId);
        Value.ResourceIds = string.Join(';', resourceIds.Where(r => !string.IsNullOrEmpty(r)));
    }
}