<Modal @bind-IsOpen="@Visible">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>@Title</ModalTitle>
            <CloseButton Clicked="@CloseButtonClicked" />
        </ModalHeader>
        <ModalBody>
            @ChildContent
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@NoButtonClicked">@NoButton</Button>
            <Button Color="Color.Success" Clicked="@YesButtonClicked">@YesButton</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public string Title { get; set; } = "Modal Dialog";

    [Parameter]
    public string YesButton { get; set; } = "Accept";

    [Parameter]
    public string NoButton { get; set; } = "Close";

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback<bool> ResultClicked { get; set; }

    protected void YesButtonClicked()
    {
        ResultClicked.InvokeAsync(true);
        Visible = false;
    }
    protected void NoButtonClicked()
    {
        ResultClicked.InvokeAsync(false);
        Visible = false;
    }
    protected void CloseButtonClicked()
    {
        Visible = false;
    }
}
