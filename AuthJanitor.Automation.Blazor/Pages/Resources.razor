@layout MainLayout
@page "/resources"
@using AuthJanitor.Automation.Blazor.Modals
@using AuthJanitor.Automation.Shared.ViewModels
@using BlazorTable

<Card>
    <CardHeader>
        <DisplayHeading Size="DisplayHeadingSize.Is4">Resources</DisplayHeading>
    </CardHeader>
    <CardBody>
        <BlazorTable.Table @ref="table" TableItem="Automation.Shared.ViewModels.ResourceViewModel" Items="@ResourceList" TableClass="table table-striped table-bordered">
            <BlazorTable.Column TableItem="Automation.Shared.ViewModels.ResourceViewModel" Title="" Width="1%" Field="@(x => x.ObjectId)" Sortable="false" Filterable="false">
                <Template>
                    <Blazorise.Buttons>
                        <Blazorise.Button Color="Color.Info" Clicked="@(() => View(context))">
                            <Icon Name="FontAwesomeIcons.Eye" Class="text-light" />
                        </Blazorise.Button>
                        <Blazorise.Button Color="Color.Danger" Clicked="@(() => ConfirmDelete(context))">
                            <Icon Name="FontAwesomeIcons.Trash" Class="text-light" />
                        </Blazorise.Button>
                    </Blazorise.Buttons>
                </Template>
            </BlazorTable.Column>
            <BlazorTable.Column TableItem="Automation.Shared.ViewModels.ResourceViewModel" Title="Name" Field="@(x => x.Name)" Sortable="true" Filterable="true" />
            <BlazorTable.Column TableItem="Automation.Shared.ViewModels.ResourceViewModel" Title="Description" Field="@(x => x.Description)" Sortable="true" Filterable="true" />
            <BlazorTable.Column TableItem="Automation.Shared.ViewModels.ResourceViewModel" Title="Provider" Field="@(x => x.ProviderDetail.Name)" Sortable="true" Filterable="true" />
            <BlazorTable.Column TableItem="Automation.Shared.ViewModels.ResourceViewModel" Title="Risk Score" Field="@(x => x.RiskScore)" Sortable="true" Filterable="true" />

            <Pager ShowPageNumber="true" ShowTotalCount="true" />
        </BlazorTable.Table>
        <Blazorise.Button Color="Color.Primary" Clicked="@(() => addResourceModal.ShowModal(() => LoadData()))">
            <Icon Name="FontAwesomeIcons.Plus" /> Add Resource
        </Blazorise.Button>
    </CardBody>
</Card>

<AddResourceModal @ref="addResourceModal" />
<DeleteConfirmationModal @ref="deleteModal" />

@code {
    public IEnumerable<Automation.Shared.ViewModels.ResourceViewModel> ResourceList { get; set; } = new List<Automation.Shared.ViewModels.ResourceViewModel>();

    protected BlazorTable.Table<ResourceViewModel> table;
    protected Modals.AddResourceModal addResourceModal;
    protected Modals.DeleteConfirmationModal deleteModal;

    protected override async Task OnInitializedAsync() => await LoadData();
    protected async Task LoadData()
    {
        ResourceList = await Http.List<ResourceViewModel>();
        this.StateHasChanged();
    }
    protected void ConfirmDelete(ResourceViewModel resource) =>
        deleteModal.ShowModal(resource.ObjectId, resource.Name,
            (id) => Http.Delete<ResourceViewModel>(id).ContinueWith(async t => await LoadData()));
    protected void View(ResourceViewModel resource) => NavigationManager.NavigateTo($"/aj/resources/{resource.ObjectId}");
}
